# a docker-compose file with a postgres 14 service

version: '3.8'
services:
  contort-frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-frontend-prod
    container_name: contort-frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - ct-net

  contort-cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: always
    command: tunnel --no-autoupdate run
    volumes:
      - ./cloudflared:/etc/cloudflared
      - ./tunnel_token.txt:/etc/cloudflared/tunnel_token.txt:ro
      - ./tunnel_hostname.txt:/etc/cloudflared/tunnel_hostname.txt:ro
    networks:
      - ct-net
    env_file:
      - .env

  nginx-contortbackend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-nginx-prod
    container_name: nginx-contortbackend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./media:/media/
      - ./staticfiles:/static/
      - ./certs:/etc/nginx/certs
    depends_on:
      - contort
      - certsContort
    networks:
      - ct-net

  certsContort:
    image: alpine:latest
    container_name: certsContort
    command: >
      /bin/sh -c "
      apk add --no-cache openssl &&
      mkdir -p /certs &&
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/nginx.key -out /certs/nginx.crt -subj '/CN=localhost'
      "
    volumes:
      - ./certs:/certs
    networks:
      - ct-net

  contort:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile
    container_name: contort
    restart: always
    volumes:
      - ./media:/app/media/
    ports:
      - "8000:8000"
    env_file:
      - .env

    networks:
      - ct-net

  contortconsurf:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile-consurf
    container_name: contortconsurf
    restart: always
    volumes:
      - ./media:/app/media/
    env_file:
      - .env
    networks:
      - ct-net

  dbct:
    container_name: dbct
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
    - "5432:5432"
    volumes:
    - ./data:/var/lib/postgresql/data
    networks:
      - ct-net

  redisct:
    container_name: redisct
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-redis
    restart: always
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    networks:
      - ct-net

networks:
    ct-net:
