# a docker-compose file with a postgres 14 service

version: '3.8'
services:
  nginx-contortbackend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-nginx
    container_name: nginx-contortbackend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./media:/media/
      - ./staticfiles:/static/
      - ./certs:/etc/nginx/certs
    depends_on:
      - contort
      - certsContort
    networks:
      - ct-net

  certsContort:
    image: alpine:latest
    container_name: certsContort
    command: >
      /bin/sh -c "
      apk add --no-cache openssl &&
      mkdir -p /certs &&
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/nginx.key -out /certs/nginx.crt -subj '/CN=localhost'
      "
    volumes:
      - ./certs:/certs
    networks:
      - ct-net

  contort:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile-insecure
    container_name: contort
    ports:
      - "8000:8000"
    environment:
        - POSTGRES_NAME=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_HOST=dbct
        - REDIS_HOST=redisct
        - CORS_ORIGIN_WHITELIST=http://localhost,http://localhost:4200,https://localhost,https://mrc-ms-r640-9.lifesci.dundee.ac.uk
        - CSRF_TRUSTED_ORIGINS=http://localhost,https://localhost,https://mrc-ms-r640-9.lifesci.dundee.ac.uk
        - ALLOWED_HOSTS=localhost
    networks:
      - ct-net

  contortconsurf:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile-consurf
    container_name: contortconsurf
    environment:
        - POSTGRES_NAME=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_HOST=dbct
        - REDIS_HOST=redisct
        - CORS_ORIGIN_WHITELIST=http://localhost,http://localhost:4200,https://localhost
        - ALLOWED_HOSTS=localhost
    networks:
      - ct-net

  dbct:
    container_name: dbct
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
    - "5432:5432"
    volumes:
    - ./data:/var/lib/postgresql/data
    networks:
      - ct-net

  redisct:
    container_name: redisct
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-redis
    restart: always
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    networks:
      - ct-net

networks:
    ct-net:
