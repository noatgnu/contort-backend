# a docker-compose file with a postgres 14 service

version: '3.8'
services:
  contort-frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-frontend
    container_name: contort-frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - ct-net

  #contort-cloudflared:
  #  image: cloudflare/cloudflared:latest
  #  container_name: cloudflared
  #  restart: always
  #  command: tunnel --no-autoupdate run
  #  volumes:
  #    - ./cloudflared:/etc/cloudflared
  #    - ./tunnel_token.txt:/etc/cloudflared/tunnel_token.txt:ro
  #    - ./tunnel_hostname.txt:/etc/cloudflared/tunnel_hostname.txt:ro
  #  networks:
  #    - ct-net
  #  env_file:
  #    - .env

  nginx-contortbackend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-nginx
    container_name: nginx-contortbackend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./media:/media/
      - ./staticfiles:/static/
      - ./certs:/etc/nginx/certs
    depends_on:
      - contort
      - certsContort
    networks:
      - ct-net

  certsContort:
    image: alpine:latest
    container_name: certsContort
    restart: always
    command: >
      /bin/sh -c "
      apk add --no-cache openssl &&
      mkdir -p /certs &&
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/nginx.key -out /certs/nginx.crt -subj '/CN=localhost'
      "
    volumes:
      - ./certs:/certs
    networks:
      - ct-net

  contort:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile
    container_name: contort
    restart: always
    volumes:
      - ./media:/app/media/
    ports:
      - "8000:8000"
    environment:
        - POSTGRES_NAME=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_HOST=dbct
        - REDIS_HOST=redisct
        - CORS_ORIGIN_WHITELIST=http://localhost,http://localhost:4200,https://localhost,https://contort.proteo.nexus,http://contort.proteo.nexus
        - CSRF_TRUSTED_ORIGINS=http://localhost,https://localhost,https://contort.proteo.nexus,http://contort.proteo.nexus,http://localhost:4200
        - ALLOWED_HOSTS=localhost,contort.proteo.nexus
    networks:
      - ct-net

  contortconsurf:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile-consurf
    container_name: contortconsurf
    restart: always
    volumes:
      - ./media:/app/media/
    environment:
        - POSTGRES_NAME=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_HOST=dbct
        - REDIS_HOST=redisct
        - CORS_ORIGIN_WHITELIST=http://localhost,http://localhost:4200,https://localhost
        - ALLOWED_HOSTS=localhost
    networks:
      - ct-net

  dbct:
    container_name: dbct
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
    - "5432:5432"
    volumes:
    - ./data:/var/lib/postgresql/data
    networks:
      - ct-net

  redisct:
    container_name: redisct
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-redis
    restart: always
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    networks:
      - ct-net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloakdb
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
    networks:
      - ct-net
    command: [ 'start-dev' ]
    ports:
      - "8080:8080"
    restart: always

  keycloakdb:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: keycloak
    ports:
      - "5433:5432"
    volumes:
      - ./keycloak-data:/var/lib/postgresql/data
    restart: always

networks:
    ct-net:
